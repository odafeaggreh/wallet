<FlatList
          data={coins}
          keyExtractor={(item) => item.id}
          contentContainerStyle={{
            marginTop: 30,
            paddingHorizontal: SIZES.padding,
          }}
          ListHeaderComponent={
            <View style={{ marginBottom: SIZES.radius }}>
              <Text style={{ color: COLORS.black, ...FONTS.h3, fontSize: 18 }}>
                Top Cryptocurrency
              </Text>
            </View>
          }
          renderItem={({ item }) => {
            let priceColor =
              item.price_change_percentage_7d_in_currency == 0
                ? COLORS.lightGray3
                : item.price_change_percentage_7d_in_currency > 0
                ? COLORS.lightGreen
                : COLORS.red;
            return (
              <TouchableOpacity
                style={{
                  height: 55,
                  flexDirection: "row",
                  alignItems: "center",
                  justifyContent: "center",
                }}
                onPress={() => setSelectedCoin(item)}
              >
                {/* Logo */}
                <View style={{ width: 35 }}>
                  <Image
                    source={{ uri: item.image }}
                    style={{ height: 20, width: 20 }}
                  />
                </View>

                {/* Name of crypptocurrency */}
                <View style={{ flex: 1 }}>
                  <Text style={{ color: COLORS.black, ...FONTS.h3 }}>
                    {item.name}
                  </Text>
                </View>

                {/* Figures */}
                <View>
                  <Text
                    style={{
                      textAlign: "right",
                      color: COLORS.black,
                      ...FONTS.h4,
                    }}
                  >
                    {numberToMoney(item.current_price)}
                  </Text>

                  <View
                    style={{
                      flexDirection: "row",
                      alignItems: "center",
                      justifyContent: "flex-end",
                    }}
                  >
                    {item.price_change_percentage_7d_in_currency != 0 && (
                      <Image
                        source={icons.upArrow}
                        style={{
                          height: 10,
                          width: 10,
                          tintColor: priceColor,
                          transform:
                            item.price_change_percentage_7d_in_currency > 0
                              ? [{ rotate: "45deg" }]
                              : [{ rotate: "125deg" }],
                        }}
                      />
                    )}

                    <Text
                      style={{
                        marginLeft: 5,
                        color: priceColor,
                        ...FONTS.body5,
                        lineHeight: 15,
                      }}
                    >
                      {item.price_change_percentage_7d_in_currency.toFixed(2)}%
                    </Text>
                  </View>
                </View>
              </TouchableOpacity>
            );
          }}
          ListFooterComponent={<View style={{ marginBottom: 50 }}></View>}
        />



        
            <Surface
              style={{
                flexDirection: "row",
                justifyContent: "space-between",
                marginTop: 10,
                padding: SIZES.padding,
                width: SIZES.width,
                elevation: 0,
              }}
            >
              {/* coin details */}
              <View style={{ flexDirection: "row" }}>
                {/* crypto */}
                <View>
                  <Image
                    source={{ uri: item.image }}
                    style={{ width: 30, height: 30 }}
                  />
                </View>

                <View
                  style={{
                    marginLeft: SIZES.radius,
                  }}
                >
                  {/* coin  */}

                  {/* Name */}
                  <Text
                    style={{
                      color: COLORS.black,
                      ...FONTS.h4,
                    }}
                  >
                    {item.name}
                  </Text>

                  {/* price */}
                  <Text>{formatter.format(item.total)}</Text>
                  {/* amout owned */}
                  <Text>
                    {item.qty} {item.symbol.toUpperCase()}
                  </Text>
                </View>
              </View>

              {/* chart */}
              <View>
                {/* chart */}
                <Text>Chart</Text>
                {/* crypto price */}
                <Text>{formatter.format(item.current_price)}</Text>
                {/* percentage */}
                <View
                  style={{
                    flexDirection: "row",
                    justifyContent: "flex-start",
                    alignItems: "center",
                  }}
                >
                  {item.price_change_percentage_7d_in_currency != 0 && (
                    <Image
                      source={icons.upArrow}
                      style={{
                        height: 10,
                        width: 10,
                        tintColor: priceColor,
                        transform:
                          item.price_change_percentage_7d_in_currency > 0
                            ? [{ rotate: "45deg" }]
                            : [{ rotate: "125deg" }],
                      }}
                    />
                  )}

                  <Text
                    style={{
                      marginLeft: 5,
                      color: priceColor,
                      ...FONTS.body5,
                      lineHeight: 15,
                    }}
                  >
                    {item.price_change_percentage_7d_in_currency.toFixed(2)}%
                  </Text>
                </View>
              </View>
            </Surface>